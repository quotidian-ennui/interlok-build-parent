name: gradle-check
run-name: Gradle Check
on:
  workflow_call:
    inputs:
      ref:
        required: true
        description: "The branch to checkout and work-on"
        type: string
      pull_request:
        required: false
        description: "The Pull Request No."
        type: string
      update_type:
        required: false
        description: "Update type associated with dependabot PR"
        type: string
      sha:
        required: false
        description: "SHA of the commit"
        type: string
      actor:
        required: false
        description: "The actor associated with the PR"
        type: string
        default: ${{ github.actor }}
      gradle_version:
        required: false
        description: "Gradle version to use"
        type: string
        default: 8.5
jobs:
  bootstrap:
    name: Pipeline Bootstrap
    runs-on: ubuntu-latest
    outputs:
      status_context: "Gradle Check"
      is_pr: ${{ steps.compute.outputs.is_pr }}
      is_dependabot_pr: ${{ steps.compute.outputs.is_dependabot_pr }}
      label_prefix: "build_"
      gradle_modified: ${{ steps.changes.outputs.gradle_any_changed }}
      actions_modified: ${{ steps.changes.outputs.workflows_any_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ inputs.ref }}
      - name: Changed Files
        # Attempt to figure out what files have changed
        id: changes
        uses: tj-actions/changed-files@90a06d6ba9543371ab4df8eeca0be07ca6054959 # v42.0.2
        with:
          files_yaml: |
            gradle:
              - "**/build.gradle"
            workflows:
              - ".github/workflows/**"
      - name: Compute Activities
        id: compute
        run: |
          if [[ "${{ inputs.pull_request }}" != "" ]]
          then
            echo "is_pr=true"  >> "$GITHUB_OUTPUT"
          else
            echo "is_pr=false"  >> "$GITHUB_OUTPUT"
          fi
          if [[ "${{ inputs.pull_request }}" != "" && "${{ inputs.actor }}" == "dependabot[bot]" ]]
          then
            echo "is_dependabot_pr=true"  >> "$GITHUB_OUTPUT"
          else
            echo "is_dependabot_pr=false"  >> "$GITHUB_OUTPUT"
          fi
  gradle:
    runs-on: ubuntu-latest
    needs:
      - bootstrap
    name: Gradle Check
    steps:
      - name: Build Pending
        uses: quotidian-ennui/actions-olio/commit-status-and-label@main
        if: |
          needs.bootstrap.outputs.is_pr == 'true' &&
          inputs.sha != ''
        with:
          state: pending
          sha: ${{ inputs.sha }}
          context: ${{ needs.bootstrap.outputs.status_context }}
          label_prefix: ${{ needs.bootstrap.outputs.label_prefix }}
      - name: Checkout branch
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ inputs.ref }}
      - name: Set up JDK
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
        with:
          java-version: 21
          distribution: "temurin"
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
        id: setup_gradle
        with:
          gradle-home-cache-cleanup: true
          gradle-version: ${{ inputs.gradle_version }}
      - name: Execute Check
        id: gradle
        env:
          JDK_JAVA_OPTIONS: -Dpolyglot.js.nashorn-compat=true -Dpolyglot.engine.WarnInterpreterOnly=false
        run: |
          cd "${{ github.workspace }}/test" && gradle check
      - name: Gradle Build Reports
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: build-reports
          path: |
            **/build/reports
      - name: Build Result
        if: |
          (success() || failure()) &&
          needs.bootstrap.outputs.is_pr == 'true' &&
          inputs.sha != ''
        uses: quotidian-ennui/actions-olio/commit-status-and-label@main
        with:
          state: ${{ steps.gradle.outcome }}
          sha: ${{ inputs.sha }}
          context: ${{ needs.bootstrap.outputs.status_context }}
          label_prefix: ${{ needs.bootstrap.outputs.label_prefix }}
  dependabot_merge_gradle:
    runs-on: ubuntu-latest
    name: Dependabot Merge (gradle changes)
    needs:
      - bootstrap
      - gradle
    if: |
      needs.bootstrap.outputs.is_dependabot_pr == 'true' &&
      needs.bootstrap.outputs.gradle_modified == 'true'
    steps:
      - name: Checkout branch
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ inputs.ref }}
      - name: Allow merge on semver-patch
        id: allow_merge
        run: |
          function patch_only() {
           local update_type=${1/version-update:/}
           case "$update_type" in
           semver-patch) return 0;;
           *) return 1;;
           esac
          }
          # shellcheck disable=SC2091
          if patch_only "${{ inputs.update_type }}"
          then
            echo "automerge=true" >> "$GITHUB_OUTPUT"
          else
            echo "automerge=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Update PR with Automerge comment
        id: comment
        uses: quotidian-ennui/actions-olio/pr-or-issue-comment@main
        with:
          issue_number: ${{ inputs.pull_request }}
          body: |
            :dependabot: Attempt Merge: ${{ steps.allow_merge.outputs.automerge }}

            | Decision Table | Value |
            | ------ | ------ |
            |Automerge allowed up to| semver-patch |
            |Update Type| ${{ inputs.update_type }} |
            |is_dependabot| ${{ needs.bootstrap.outputs.is_dependabot_pr }} |
            |gradle changes| ${{ needs.bootstrap.outputs.gradle_modified }} |
            |action changes| ${{ needs.bootstrap.outputs.actions_modified }} |
          token: ${{ secrets.GITHUB_TOKEN }}
          search_term: "dependabot-gradle-automerge-status"
      - name: Dependabot Merge
        id: try_merge
        continue-on-error: true
        if: |
          startsWith(inputs.ref, 'dependabot') &&
          steps.allow_merge.outputs.automerge == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr review --approve "${{ inputs.pull_request }}"
          gh pr merge -s "${{ inputs.pull_request }}"
  dependabot_merge_actions:
    runs-on: ubuntu-latest
    name: Dependabot Merge (action changes)
    needs:
      - bootstrap
      - gradle
    if: |
      needs.bootstrap.outputs.is_dependabot_pr == 'true' &&
      needs.bootstrap.outputs.actions_modified == 'true'
    steps:
      - name: Checkout branch
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ inputs.ref }}
      - name: Allow merge on semver-minor
        id: allow_merge
        run: |
          function patch_or_minor() {
           local update_type=${1/version-update:/}
           case "$update_type" in
           semver-patch|semver-minor) return 0;;
           *) return 1;;
           esac
          }
          # shellcheck disable=SC2091
          if patch_or_minor "${{ inputs.update_type }}"
          then
            echo "automerge=true" >> "$GITHUB_OUTPUT"
          else
            echo "automerge=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Update PR with Automerge comment
        id: comment
        uses: quotidian-ennui/actions-olio/pr-or-issue-comment@main
        with:
          issue_number: ${{ inputs.pull_request }}
          body: |
            :dependabot: Attempt Merge: ${{ steps.allow_merge.outputs.automerge }}

            | Decision Table | Value |
            | ------ | ------ |
            |Automerge allowed up to| semver-minor |
            |Update Type| ${{ inputs.update_type }} |
            |is_dependabot| ${{ needs.bootstrap.outputs.is_dependabot_pr }} |
            |gradle changes| ${{ needs.bootstrap.outputs.gradle_modified }} |
            |action changes| ${{ needs.bootstrap.outputs.actions_modified }} |
          token: ${{ secrets.GITHUB_TOKEN }}
          search_term: "dependabot-action-automerge-status"
      - name: Dependabot Merge
        continue-on-error: true
        if: |
          startsWith(inputs.ref, 'dependabot') &&
          steps.allow_merge.outputs.automerge == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr review --approve "${{ inputs.pull_request }}"
          gh pr merge -s "${{ inputs.pull_request }}"
